openapi: 3.0.0

info:
  version: 1.0.0
  title: L7mp control plane API
  description: A programming interface for controlling L7mp

servers:
  - url: '/io.l7mp.api.v1'

components:
  schemas:
    io.l7mp.api.v1.Config:
      description: Full L7mp static and runtime configuration
      type: object
      properties:
        admin:
          $ref: '#/components/schemas/io.l7mp.api.v1.Admin'
        listeners:
          description: A list of Listener objects.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Listener'
        clusters:
          description: A list of Cluster objects.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'
        sessions:
          description: A list of Session objects.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Session'
      required:
        - admin
        - listeners
        - clusters

    io.l7mp.api.v1.AdminRequest:
      description: 'Wrapper for addAdmin calls: contains only a single Admin object.'
      type: object
      required:
        - admin
      properties:
        admin:
          $ref: '#/components/schemas/io.l7mp.api.v1.Admin'

    io.l7mp.api.v1.Admin:
      description: Static configuration
      type: object
      properties:
        log_level:
          type: string
          description: Log verbosity, one of, from the most talkative, "silly", "verbose", "info", "notice", "warn", "error", and "silent" (not recommended). Default is "info".
        log_file:
          type: string
          description: File to write log messages to. Default is "stderr".
        access_log_path:
          type: string
          description: Access log (currently unimplemented).
        strict:
          type: boolean
          description: 'Enable strict mode: validates all REST API calls against OpenAPI schema (default: false).'
        version:
          type: string
          description: Version info.

    io.l7mp.api.v1.ListenerRequest:
      description: 'Wrapper for addListener calls: contains only a single Listener object'
      type: object
      required:
        - listener
      properties:
        listener:
          $ref: '#/components/schemas/io.l7mp.api.v1.Listener'

    io.l7mp.api.v1.Listener:
      description: A socket that listens for incoming connection requests, an abstraction for an "ingress port".
      type: object
      required:
        - name
        - spec
        - rules
      properties:
        name:
          description: Name (required).
          type: string
        spec:
          description: Listener specification (required).
          type: object
          oneOf:
            - $ref: '#/components/schemas/io.l7mp.api.v1.HTTPListenerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.WebSocketListenerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.UDPListenerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.TCPListenerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.UnixDomainSocketListenerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.JSONSocketListenerSpec'
          discriminator:
            propertyName: protocol
            mapping:
              HTTP: '#/components/schemas/io.l7mp.api.v1.HTTPListenerSpec'
              WebSocket: '#/components/schemas/io.l7mp.api.v1.WebSocketListenerSpec'
              UDP: '#/components/schemas/io.l7mp.api.v1.UDPListenerSpec'
              TCP: '#/components/schemas/io.l7mp.api.v1.TCPListenerSpec'
              UnixDomainSocket: '#/components/schemas/io.l7mp.api.v1.UnixDomainSocketListenerSpec'
              JSONSocket: '#/components/schemas/io.l7mp.api.v1.JSONSocketListenerSpec'
        rules:
          description: The name of a match-action table or an inline list of match-action rules (required).
          # REMOVED CHECKING DUE TO VALIDATION ERRORS IN oneOf(string,object/array)
          # oneOf:
          #   - type: string  # reference to a named RuleList
          #   - type: array
          #     items:
          #       $ref: '#/components/schemas/io.l7mp.api.v1.Rule'
          #   # - $ref: '#/components/schemas/io.l7mp.api.v1.RuleList'
        options:
          description: Optional features.
          type: object
          properties:
            removeOrphanSessions:
              description: On removing the listener also remove all sessions emitted by this listener.
              type: boolean
            track:
              description: Sessions created by this listener will be tracked and will be available after ending for a specified amount of time, to help post-mortem analysis. If specified, then value must be an integer, providing the number of seconds during which the session will be available before deletion.
              type: integer

    io.l7mp.api.v1.HTTPListenerSpec:
      description: |
        A HTTP server specification that accepts HTTP requests at a specified port.
        - protocol: HTTP
        - session ID: IP 5-tuple
        - type: session
        - mode: server
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - HTTP
          description: The protocol, must be "HTTP".
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'
        path:
          type: string
          description: HTTP URL to serve.

    io.l7mp.api.v1.WebSocketListenerSpec:
      description: |
        A WebSocket server specification that accepts HTTP/WebSocket requests at a specified port.
        - protocol: WebSocket
        - session ID: IP 5-tuple
        - type: datagram-stream
        - mode: server
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - WebSocket
          description: The protocol, must be "WebSocket".
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'
        path:
          type: string
          description: HTTP URL to serve.

    io.l7mp.api.v1.UDPListenerSpec:
      description: |
        "A UDP listener that accepts UDP connections in the specified port. The listener may work in one of 2 possible modes. In Singleton mode, the listener also expects a fully qualified remote address-port pair (both connect.address or connect.port specified), connects back to the remote and stops accepting further connection requests. The parameter options.connection controls when the connection is created: with options.connection=immediate the listener connects at creation time, but with options.connection=ondemand the listener waits for the first packet from the specified remote to create the connection. In Server mode, the listener emits a new session for each UDP packet that belongs to a yet unseen connection (unknown IP 4-tuple). If a remote address or port is specified (one of connect.address or connect.port is specified), accept connections only from that remote address or port. Assumes connection=ondemand."
        - protocol: UDP
        - session ID: IP 5-tuple
        - type: datagram-stream
        - mode: "singleton/server"
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          description: The protocol, must be "UDP".
          type: string
          enum:  # fixed value
            - UDP
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'
        connect:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.AddressPortPair'
        options:
          type: object
          properties:
            connection:
              description: Connect immediately as the listener is created ("immediate") or on the first packet received ("ondemand"). Valid only in "Singleton" mode.
              type: string
              enum:
              - immediate
              - ondemand

    io.l7mp.api.v1.TCPListenerSpec:
      description: |
        A TCP server specification that accepts TCP requests at a specified port.
        - protocol: TCP
        - session ID: IP 5-tuple
        - type: datagram-stream
        - mode: server
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - TCP
          description: The protocol, must be "TCP".
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'

    io.l7mp.api.v1.UnixDomainSocketListenerSpec:
      description: |
        A Unix Domain Socket (UDS) server specification that accepts IPC connection requests at a specified filename.
        - protocol: UnixDomainSocket
        - session ID: Listener name + ID
        - type: byte-stream
        - mode: server
      type: object
      required:
        - protocol
        - filename
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - UnixDomainSocket
          description: The protocol, must be "UnixDomainSocket".
        filename:
          type: string
          description: File system path to bind to.

    io.l7mp.api.v1.JSONSocketListenerSpec:
      description: |
        This listener implements the server side of the the JSONSocket datagram streaming protocol. JSONSocket implements the "HTTP header" semantics, but on top of a dumb unreliable datagram transport like UDP or pure IP. Can be established over any datagram transport, the listener expects the first packet of the stream to be a fully specified JSON object, which will then be copied into the session metadata, and can return an arbitrary response header to the client. Both the JSON request and response headers are transmitted reliably, subject to user specified timeout.
        - protocol: JSONSocket
        - session ID: Listener name + ID
        - type: datagram-stream
        - mode: "singleton/server"
      type: object
      required:
        - protocol
        - transport
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - JSONSocket
          description: The protocol, must be "JSONSocket".
        transport:
          description: The specification of the listener that provides the transport service to JSONSocket.
          type: object
          oneOf:
            - $ref: '#/components/schemas/io.l7mp.api.v1.WebSocketListenerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.UDPListenerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.UnixDomainSocketListenerSpec'
          discriminator:
            propertyName: protocol
            mapping:
              WebSocket: '#/components/schemas/io.l7mp.api.v1.WebSocketClusterSpec'
              UDP: '#/components/schemas/io.l7mp.api.v1.UDPClusterSpec'
              UnixDomainSocket: '#/components/schemas/io.l7mp.api.v1.UnixDomainSocketListenerSpec'
        parse:
          type: array
          items:
            description: A JSON field to parse out from the JSONSocket header and write into the session metadata.
            type: object
            properties:
              path:
                type: string
                description: Field to be copied from the JSON header to the session metadata header specified as a JSON Pointer.
              target:
                type: string
                description: Target path to write parsed field.

    io.l7mp.api.v1.EndPointRequest:
      description: |
        Wrapper for addEndPoint calls. Contains only a single EndPoint object.
      type: object
      required:
        - endpoint
      properties:
        endpoint:
          $ref: '#/components/schemas/io.l7mp.api.v1.EndPoint'

    io.l7mp.api.v1.ClusterRequest:
      description: |
        Wrapper for addCluster calls. Contains only a single Cluster object.
      type: object
      required:
        - cluster
      properties:
        cluster:
          $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'

    io.l7mp.api.v1.Cluster:
      description: A socket that originates connections to external services, an abstraction for an "egress port".
      type: object
      required:
        - spec
      properties:
        name:
          type: string
        spec:
          type: object
          oneOf:
            - $ref: '#/components/schemas/io.l7mp.api.v1.WebSocketClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.UDPClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.TCPClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.UnixDomainSocketClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.L7mpControllerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.StdioClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.EchoClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.LoggerClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.SyncClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.JSONEncapClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.JSONDecapClusterSpec'
          discriminator:
            propertyName: protocol
            mapping:
              WebSocket: '#/components/schemas/io.l7mp.api.v1.WebSocketClusterSpec'
              UDP: '#/components/schemas/io.l7mp.api.v1.UDPClusterSpec'
              TCP: '#/components/schemas/io.l7mp.api.v1.TCPClusterSpec'
              UnixDomainSocket: '#/components/schemas/io.l7mp.api.v1.UnixDomainSocketClusterSpec'
              L7mpController: '#/components/schemas/io.l7mp.api.v1.L7mpControllerSpec'
              Stdio: '#/components/schemas/io.l7mp.api.v1.StdioClusterSpec'
              Echo: '#/components/schemas/io.l7mp.api.v1.EchoClusterSpec'
              Logger: '#/components/schemas/io.l7mp.api.v1.LoggerClusterSpec'
              Sync: '#/components/schemas/io.l7mp.api.v1.SyncClusterSpec'
              JSONEncap: '#/components/schemas/io.l7mp.api.v1.JSONEncapClusterSpec'
              JSONDecap: '#/components/schemas/io.l7mp.api.v1.JSONDecapClusterSpec'
        endpoints:
          description: A list of EndPoint objects.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.EndPoint'
        loadbalancer:
            $ref: '#/components/schemas/io.l7mp.api.v1.LoadBalancer'
        options:
          description: Optional features.
          type: object
          properties:
            removeOrphanSessions:
              description: On removing the cluster also remove all sessions router through the cluster.
              type: boolean

    io.l7mp.api.v1.WebSocketClusterSpec:
      description: A WebSocket cluster specification that forwards HTTP/WebSocket connections to an upstream cluster.
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - WebSocket
          description: The protocol, must be "WebSocket".
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'

    io.l7mp.api.v1.UDPClusterSpec:
      description: A UDP sender socket that forwards UDP connections to an upstream cluster, connecting to a well-defined remote address-port pair.
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          description: The protocol, must be "UDP".
          type: string
          enum:  # fixed value
            - UDP
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'
        bind:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.AddressPortPair'

    io.l7mp.api.v1.TCPClusterSpec:
      description: A TCP cluster specification that forwards TCP connections to an upstream cluster.
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - TCP
          description: The protocol, must be "TCP".
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'
        bind:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.AddressPortPair'

    io.l7mp.api.v1.UnixDomainSocketClusterSpec:
      description: A Unix Domain Socket (UDS) cluster specification that forwards IPC connections to an upstream cluster.
      type: object
      required:
        - protocol
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - UnixDomainSocket
          description: The protocol, must be "UnixDomainSocket".

    io.l7mp.api.v1.L7mpControllerSpec:
      description: A virtual cluster that accepts L7mp controller REST API calls.
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "L7mpController".
          type: string
          enum:  # fixed value
            - L7mpController

    io.l7mp.api.v1.StdioClusterSpec:
      description: A virtual cluster that writes the stream routed to it to the proxy standard output and pipes back standard input into the stream. Useful for debugging.
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "Stdio".
          type: string
          enum:  # fixed value
            - Stdio

    io.l7mp.api.v1.EchoClusterSpec:
      description: A virtual cluster that echoes back everything it receives.
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "Echo".
          type: string
          enum:  # fixed value
            - Echo

    io.l7mp.api.v1.LoggerClusterSpec:
      description: A virtual cluster that logs everything that passes through it to a log file.
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "Logger".
          type: string
          enum:  # fixed value
            - Logger
        log_file:
          description: The file to log to. Opened it mode "w" (create or truncate if exists). Default is '-' (stdout).
          type: string
        log_prefix:
          description: Prefix log messages. Default is no prefix.
          type: string

    io.l7mp.api.v1.SyncClusterSpec:
      description: |
        A virtual cluster that allows multiple streams to synchronize and exchange data. The Sync cluster acts as a rendezvous point for streams whose metadata query evaluates to the same value (like e.g., multiple WebSocket streams with the same HTTP cookie); these streams will be connected into a single broadcast domain, whereby any data sent by any of the streams will be boradcast to all the other streams. Useful for connecting two ingress streams into a single end-to-end stream.
      type: object
      required:
        - protocol
        - query
      properties:
        protocol:
          description: The protocol, must be "Sync".
          type: string
          enum:  # fixed value
            - Sync
        query:
          description: A JSONPredicate query to the stream metadata. All streams for which the query evaluates to the same value will be connected into a single broadcast domain.
          type: string

    io.l7mp.api.v1.JSONEncapClusterSpec:
      description: A virtual cluster to encapsulate data in JSON. Session metadata is copied under the "/metadata" JSON path and content is copied under "/payload".
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "JSONEncap".
          type: string
          enum:  # fixed value
            - JSONEncap

    io.l7mp.api.v1.JSONDecapClusterSpec:
      description: A virtual cluster to decapsulates data from JSON. In particular, content from under "/payload" JSON path is decapsulated and returned and everything else is dropped.
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "JSONDecap".
          type: string
          enum:  # fixed value
            - JSONDecap

    io.l7mp.api.v1.EndPoint:
      description: A particular upstream backend that accepts connects through a Cluster.
      type: object
      required:
        - spec
      properties:
        name:
          description: Name (optional, a unique endpoint name will be assigned automatically if not specified.)
          type: string
        spec:
          $ref: '#/components/schemas/io.l7mp.api.v1.EndPointSpec'

    # TODO: specialize for different endpoint types
    io.l7mp.api.v1.EndPointSpec:
      description: A generic endpoint specification.
      type: object
      required:
        - address
      properties:
        address:
          type: string
          # REMOVED CHECKING DUE TO VALIDATION ERRORS IN oneOf(string,object/array)
          # oneOf:
          #   - type: string  # Unix Domain Socket filename
          #   - $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Address'
        weight:
          description: Weight of the endpoint used in load-balancing.
          type: integer

    io.l7mp.api.v1.LoadBalancer:
      description: Load-balancer specification.
      type: object
      required:
        - policy
      properties:
        policy:
          type: string
          description: |
            Load-balancing policy. The "Trivial" load-balancer always chooses the first endpoint. The "ConsistentHash" (alias for "HashRing") chooses an endpoint based on hashing the "LoadBalancer.key" field (or randomly if no key is specified). It provides soft session affinity (map sessions to the same endpoint with high probability even when adding/removing endpoints) and takes endpoint weights into account (so "HashRing" with no key specified will implement a somewhat expensive form of weighted random load-balancing).
        key:
          description: The JSON path to the metadata field to hash on (optional).
          type: string

    io.l7mp.api.v1.Route:
      description: The route to be assigned to a session in a math-action rule.
      type: object
      required:
        - destination
      properties:
        name:
          description: Name (optional, a unique name name will be assigned automatically if not specified.)
          type: string
        destination:
          description: The target cluster of the route (required). Can be a string in which case it is the name of an existing cluster with the name given, or it can be an inline cluster definition in which case a new cluster will be added.
          # REMOVED CHECKING DUE TO VALIDATION ERRORS IN oneOf(string,object/array)
          # oneOf:
          #   - type: string
          #   - $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'
        ingress:
          description: The set of transforms to be applied in the "ingress" (upstream, from the listener to the cluster) direction (optional).
          type: array
          items:
            description: An uplink transformer cluster. Can be a string in which case it is the name of an existing cluster with the name given, or it can be an inline cluster definition in which case a new cluster will be added.
            # REMOVED CHECKING DUE TO VALIDATION ERRORS IN oneOf(string,object/array)
            # oneOf:
            #   - type: string
            #   - $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'
        egress:
          description: The set of transforms to be applied in the "eress" (downstream, from the cluster to the listener) direction (optional).
          type: array
          items:
            description: A downlink transformer cluster. Can be a string in which case it is the name of an existing cluster with the name given, or it can be an inline cluster definition in which case a new cluster will be added.
            # REMOVED CHECKING DUE TO VALIDATION ERRORS IN oneOf(string,object/array)
            # oneOf:
            #   - type: string
            #   - $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'
        retry:
          description: Connection retry/timeout policy.
          type: object
          required:
            - retry_on
          properties:
            retry_on:
              description: |
                One of "never" (never retry, default), "connect-failure" (retry only on a failure in the connection setup phase), "disconnect" (retry only when an already connected stream disconnects), or "always" ("connect-failure" & "disconnect").
              type: string
            num_retries:
              description: |
                If "retry_on" is "never" then this is meaningless.  If "retry_on" is "connect-failure" or "disconnect" then "num_retries" means the number of times to attempt a reconnect each cluster separately, so if there are two clusters in the route and "num_retries" is 3, then retry connecting both clusters 3 times. If a stream is reconnected after a disconnect event, try again this many times from zero.
              type: integer
            timeout:
              description: |
                On "connect-failure", wait "timeout" msecs and then reconnect, otherwise wait "timeout" msecs between each re-connect attempts.
              type: integer

    # io.l7mp.api.v1.Match:
    #   description: The "filter" part of a math-action rule that filters on session metadata.
    #   type: object
    #   oneOf:
    #     - $ref: '#/components/schemas/io.l7mp.api.v1.WildcardMatch'
    #     - $ref: '#/components/schemas/io.l7mp.api.v1.JSONPredicate'

    # io.l7mp.api.v1.WildcardMatch:
    #   description: A wildcard filter, matches everything.
    #   type: string

    io.l7mp.api.v1.JSONPredicate:
      description: A complex filter specified as a JSON predicate, see https://tools.ietf.org/html/draft-snell-json-test-07
      type: object

    io.l7mp.api.v1.Rewrite:
      description: Metadata rewrite rule. Find or create metadata at the specified path and set it to the specified value.
      type: object
      required:
        - path
        - value
      properties:
        path:
          description: The JSON path (as a JSON Pointer) to the metadata field to rewrite. Will be created if path does not exist.
          type: string
        value:
          description: The value to rewrite the metadata field at the specified path. Can be a simple string or a JSON/YAML snippet.

    io.l7mp.api.v1.Action:
      description: The "action" part of a math-action rule that assigns a route to the matched sessions.
      type: object
      properties:
        rewrite:
          description: A list of rewrite rules.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Rewrite'
        route:
          description: A named Route or an inline Route specification.
          # REMOVED CHECKING DUE TO VALIDATION ERRORS IN oneOf(string,object/array)
          # oneOf:
          #   - type: string  # reference to a named Route
          #   - $ref: '#/components/schemas/io.l7mp.api.v1.Route'
        apply:
          description: A named RuleList to defer match-action processing to.
          type: string  # reference to a named Route

    io.l7mp.api.v1.Rule:
      description: A math-action rule that defines the route of a connection through the L7mp pipeline. May contain a match and an action. If no match is specified, a wildcard match is automatically installed.
      type: object
      required:
        - action
      properties:
        name:
          description: Name (optional).
          type: string
        match:
          # $ref: '#/components/schemas/io.l7mp.api.v1.Match'
          $ref: '#/components/schemas/io.l7mp.api.v1.JSONPredicate'
        action:
          $ref: '#/components/schemas/io.l7mp.api.v1.Action'

    io.l7mp.api.v1.RuleList:
      description: An abstraction for a math-action table, i.e., an ordered list of match-action rules with each rule specifying a matching condition on metadata and an action to execute if the corresponding rule matches. Rules are searched sequentially until a matching one is found; if no match is found the request is dropped.
      type: object
      required:
        - rules
      properties:
        name:
          description: Name (optional).
          type: string
        rules:
          description: A list of Rule objects.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Rule'

    io.l7mp.api.v1.Metadata:
      description: "Metadata that describes a session's all known parameters, like ports and IP addresses, status, HTTP headers (if relevant), etc. In general, metadata are created by the listener and they can be modified/queried/matched in rules/actions."
      type: object

    io.l7mp.api.v1.Stage:
      description: "A Stage along the ingress/egress pipeline for a session."
      type: object
      required:
        - origin
        - endpoint
        - status
      properties:
        origin:
          description: Name of the Cluster associated with the stage.
          type: string
        endpoint:
          description: The EndPoint currently associated with the stage.
          type: object
        status:
          description: Status.
          type: string

    io.l7mp.api.v1.Session:
      description: "An ongoing connection that is known by the proxy. A session is created by a listener receiving a new connection request and it is processed according to the match-action rules associated by the creating listener."
      type: object
      required:
        - name
        - metadata
        - source
        - destination
        - status
      properties:
        name:
          description: Name.
          type: string
        metadata:
          description: Metadata describing the state of the session.
          type: object
        source:
          description: "The spec of the Listener that emitted the session."
          type: object
        destination:
          # description: "The spec of the destination Cluster of the session."
          $ref: '#/components/schemas/io.l7mp.api.v1.Metadata'
        ingress:
          description: The stages of the ingress pipeline, from the source to the destination.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Stage'
        egress:
          description: The stages of the egress pipeline, from the destination to the source.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Stage'
        status:
          description: Status.
          type: string
        events:
          description: The last events for the session.
          type: array
          items:
            type: object
            properties:
              event:
                description: Name of the event.
                type: string
              timestamp:
                description: Timestamp.
                type: string
              message:
                description: Test description.
                type: string

    io.l7mp.api.v1.Status:
      description: General status info.
      type: object
      required:
        - message
      properties:
        status:
          description: HTTP Status code.
          type: integer
        message:
          description: Message.
          type: string
        # content:
        #   description: Error (optional).

    io.l7mp.api.v1.Parameter.Address:
      description: A network layer (IP/IPv6) address or domain name.
      type: string

    io.l7mp.api.v1.Parameter.Port:
      description: The valid transport protocol port.
      type: integer
      minimum: 1
      maximum: 65535

    io.l7mp.api.v1.Parameter.AddressPortPair:
      description: A pair of a network layer (IP/IPv6) address/domain name and a transport layer port.
      type: object
      required:
        - address
        - port
      properties:
        address:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Address'
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'

paths:
  # Full config API
  /api/v1/config:
    get:
      description: Get the full configuration.
      operationId: getConf
      responses:
        '200':
          description: Full configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Config'
    post:
      description: Reload configuration.
      operationId: setConf
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/io.l7mp.api.v1.Config'
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  # Static config API
  /api/v1/admin:
    get:
      description: Get the static configuration.
      operationId: getAdmin
      responses:
        '200':
          description: Static configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Admin'
    post:
      description: Apply static configuration
      operationId: applyAdmin
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/io.l7mp.api.v1.AdminRequest'
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  # Listener API
  /api/v1/listeners:
    get:
      description: Get a list of Listeners.
      operationId: getListeners
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                description: A list of Listeners.
                type: array
                items:
                  $ref: '#/components/schemas/io.l7mp.api.v1.Listener'
    post:
      description: Create a Listener.
      operationId: addListener
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/io.l7mp.api.v1.ListenerRequest'
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  /api/v1/listeners/{name}:
    get:
      description: Get a named Listener.
      operationId: getListener
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Listener'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
    delete:
      description: Delete a named Listener.
      operationId: deleteListener
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  # Cluster API
  /api/v1/clusters:
    get:
      description: Get a list of Clusters.
      operationId: getClusters
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                description: A list of Clusters.
                type: array
                items:
                  $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'
    post:
      description: Create a Cluster.
      operationId: addCluster
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/io.l7mp.api.v1.ClusterRequest'
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  /api/v1/clusters/{name}:
    get:
      description: Get a named Cluster.
      operationId: getCluster
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'
        '400':
          description: Invalid cluster name.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
    delete:
      description: Delete a named Cluster.
      operationId: deleteCluster
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  # EndPoint API
  /api/v1/clusters/{cluster_name}/endpoints:
    get:
      description: Get a list of EndPoints associated with a Cluster.
      operationId: getEndPoints
      parameters:
        - name: cluster_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                description: A list of EndPoints.
                type: array
                items:
                  $ref: '#/components/schemas/io.l7mp.api.v1.EndPoint'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
    post:
      description: Create an EndPoint for a Cluster.
      operationId: addEndPoint
      parameters:
        - name: cluster_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/io.l7mp.api.v1.EndPointRequest'
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  /api/v1/clusters/{cluster_name}/endpoints/{endpoint_name}:
    get:
      description: Get a named EdnPoint for a Cluster.
      operationId: getEndPoint
      parameters:
        - name: cluster_name
          in: path
          required: true
          schema:
            type: string
        - name: endpoint_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.EndPoint'
        '400':
          description: Invalid Cluster or EndPoint name.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
    delete:
      description: Delete a named EndPoint from a Cluster.
      operationId: deleteEndPoint
      parameters:
        - name: cluster_name
          in: path
          required: true
          schema:
            type: string
        - name: endpoint_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid Cluster or EndPoint name.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  # Session API
  /api/v1/sessions:
    get:
      description: Get a list of Sessions.
      operationId: getSessions
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                description: A list of Sessions.
                type: array
                items:
                  $ref: '#/components/schemas/io.l7mp.api.v1.Session'
  /api/v1/sessions/{name}:
    get:
      description: Get a named Session.
      operationId: getSession
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Session'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
    delete:
      description: Delete a named Session.
      operationId: deleteSession
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
